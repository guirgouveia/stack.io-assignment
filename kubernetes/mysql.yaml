apiVersion: v1
kind: Namespace
metadata:
  name: mysql
  labels:
    app: mysql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      namespace: mysql
      labels:
        app: mysql
    spec:
      containers:
      - image: mysql:8.0
        name: mysql
        envFrom:
        - secretRef:
            name: mysql-secret
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
        - name: mysql-init-configmap
          mountPath: /docker-entrypoint-initdb.d/mysql-init.sh
          subPath: mysql-init.sh
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1024Mi
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pvc
      - name: mysql-init-configmap
        configMap:
          name: mysql-init-configmap
          items:
          - key: mysql-init.sh
            path: mysql-init.sh
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
  labels:
    type: local
spec:
  storageClassName: standard
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: mysql
  name: mysql-pvc
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: mysql
spec:
  ports:
  - port: 3306
  selector:
    app: mysql
  clusterIP: None
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mysql
  namespace: mysql
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: reader
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods, services, deployments, configmaps, secrets"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mysql-reader-rb
subjects:
- kind: ServiceAccount
  namespace: mysql
  name: mysql
roleRef:
  kind: ClusterRole
  name: reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-configmap
  namespace: mysql
data:
  mysql-init.sh: |-
    #!/bin/bash

    set -eo pipefail

    mysql -uroot -p"${MYSQL_ROOT_PASSWORD}" <<-EOSQL
        GRANT ALL PRIVILEGES ON *.* TO 'mysql'@'%' WITH GRANT OPTION;
        GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;
        FLUSH PRIVILEGES;
    EOSQL
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: mysql
type: Opaque
data:
  MYSQL_ROOT_PASSWORD: ZXhhbXBsZQ==
  MYSQL_PASSWORD: c3RhY2staW8=
  MYSQL_USER: c3RhY2staW8=
  MYSQL_DATABASE: YmxvZw==
  MYSQL_PORT: MzMwNg==